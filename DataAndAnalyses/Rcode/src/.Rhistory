ggplot(data=freqresults,aes(x=AUROCnofit_LoFreq,y=AUROCnofit_HiFreq,color=OrderCondition))+ geom_point() +
geom_abline(intercept=interceptEven,slope=slopeEven,color='blue') +
geom_abline(intercept=interceptClumped,slope=slopeClumped,color='red') +
geom_abline(intercept=0,slope=1,color="black")
r = cor.test(freqresults$AUROCnofit_LoFreq,freqresults$AUROCnofit_HiFreq,method = "spearman")
w= wilcox.test(freqresults$AUROCnofit_LoFreq,freqresults$AUROCnofit_HiFreq,paired=TRUE)
library(ggplot2)
library(ggbeeswarm)
library(lme4)
library(tidyr)
library(dplyr)
library(lmerTest)
library(lmodel2)
theme_set(theme_classic())
results = read.csv("../output/results.csv")
library(ggplot2)
library(ggbeeswarm)
library(lme4)
library(tidyr)
library(dplyr)
library(lmerTest)
library(lmodel2)
theme_set(theme_classic())
results = read.csv("../output/results.csv")
getwd()
setwd("C:\\Users\\njcar\\OneDrive - Newcastle University\\Matlab files\\Rcode\\src")
results = read.csv("../output/results.csv")
# For some plots, we will want data in wider format
tmp = results[,c("ParticipantIdentifier","AUROCnofit","AUROC","R","dprime","WordFreq","OrderCondition")]
freqresults = pivot_wider(tmp,names_from="WordFreq",values_from=c("AUROCnofit","AUROC","R","dprime"))
# Some initial processing. First of all, logs can't cope with 0s so replace these:
cutoff = 1e-2
results$dprime[results$dprime<cutoff] = cutoff
results$R[results$R<cutoff] = cutoff
# Make a normalised AUROC
results$AUROCnorm = 2*(results$AUROC-0.5)
results$AUROCnorm[results$AUROCnorm<0]=0.1
# Our fitted AUROC should of course already be positive, but it ends up being -6.3342e-05 for some fits,
# I'm assuming due to rounding error etc.
# We will also be fitting separately for fits done using all data vs using subsets
results_AllFreq = results[results$WordFreq=="AllFreq",]
results_ByFreq = results[results$WordFreq!="AllFreq",]
ppts = as.data.frame(results %>% group_by(ParticipantIdentifier) %>% summarise(Age = mean(Age), NativeSpeaker = NativeSpeaker[1], Bilingual = Bilingual[1],Gender = Gender[1]))
Age = ppts$Age
nUnknownAge = sum(is.na(Age))
Age = Age[!is.na(Age)]
ggplot(data=results_AllFreq,aes(x=AUROCnofit,y=AUROC))+ geom_point(aes(color=OrderCondition)) + geom_abline(intercept=0,slope=1,color="black")
lm2 = lmodel2(formula = AUROCnofit_HiFreq ~ AUROCnofit_LoFreq, nperm = 99, data = filter(freqresults,OrderCondition=="Clumped"))
slopeClumped = lm2$regression.results$Slope[lm2$regression.results$Method=="MA"]
interceptClumped = lm2$regression.results$Intercept[lm2$regression.results$Method=="MA"]
lm2 = lmodel2(formula = AUROCnofit_HiFreq ~ AUROCnofit_LoFreq, nperm = 99, data = filter(freqresults,OrderCondition=="Even"))
slopeEven = lm2$regression.results$Slope[lm2$regression.results$Method=="MA"]
interceptEven = lm2$regression.results$Intercept[lm2$regression.results$Method=="MA"]
ggplot(data=freqresults,aes(x=AUROCnofit_LoFreq,y=AUROCnofit_HiFreq,color=OrderCondition))+ geom_point() +
geom_abline(intercept=interceptEven,slope=slopeEven,color='blue') +
geom_abline(intercept=interceptClumped,slope=slopeClumped,color='red') +
geom_abline(intercept=0,slope=1,color="black")
r = cor.test(freqresults$AUROCnofit_LoFreq,freqresults$AUROCnofit_HiFreq,method = "spearman")
w= wilcox.test(freqresults$AUROCnofit_LoFreq,freqresults$AUROCnofit_HiFreq,paired=TRUE)
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=AUROCnofit))+ geom_boxplot(outlier.shape=NA)+ geom_quasirandom(aes(color=StartCondition) )
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_boxplot(outlier.shape=NA)+ geom_quasirandom()
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin(outlier.shape=NA)+ geom_quasirandom()
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin(outlier.shape=NA)+ geom_quasirandom(color=StartCondition)
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin(outlier.shape=NA)+ geom_quasirandom(aes(color=StartCondition))
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin(outlier.shape=NA)+ geom_quasirandom(aes(group=StartCondition))
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition,group=StartCondition))+ geom_violin(outlier.shape=NA)+ geom_quasirandom(aes(group=StartCondition))
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin(outlier.shape=NA)+ geom_quasirandom()
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin()+ geom_quasirandom()
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition,group=StartCondition))+ geom_violin()+ geom_quasirandom()
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin()+ geom_quasirandom()
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin()+ geom_quasirandom(dodge.width=0.8)
m = lme4::glmer(R ~ WordFreq + OrderCondition  + (1|ParticipantIdentifier),  data = results_ByFreq, family = Gamma(link=log))
print(summary(m))
m = lme4::glmer(R ~ WordFreq * OrderCondition  + (1|ParticipantIdentifier),  data = results_ByFreq, family = Gamma(link=log))
print(summary(m))
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot()
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition))+ geom_boxplot() + geom_violin()+ geom_quasirandom(dodge.width=0.8)
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=StartCondition)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_AllFreq,aes(x=StartCondition,y=R,color=OrderCondition)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_AllFreq,aes(x=StartCondition,y=R)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_AllFreq,aes(x=StartCondition,y=R)) + geom_violin()+ geom_quasirandom(dodge.width=0.8,aes(color=OrderCondition)) + geom_boxplot(alpha=0)
ggplot(data=results_AllFreq,aes(x=StartCondition,y=R)) + geom_violin()+ geom_quasirandom(aes(color=OrderCondition)) + geom_boxplot(alpha=0)
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R)) + geom_violin()+ geom_quasirandom(aes(color=StartCondition)) + geom_boxplot(alpha=0)
m = lme4::glmer(R ~ WordFreq * OrderCondition  + (1|ParticipantIdentifier),  data = results_ByFreq, family = Gamma(link=log))
View(results_ByFreq)
ggplot(data=results_AllFreq,aes(x=OrderCondition,y=R,color=WordFreq)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=OrderCondition,y=R,color=WordFreq)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=OrderCondition,y=R,color=WordFreq)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_AllFreq,aes(x=WordFreq,y=R,color=OrderCondition)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=WordFreq,y=R,color=OrderCondition)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=WordFreq,y=R)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=WordFreq,y=R)) + geom_violin()+ geom_quasirandom(aes(color=OrderCondition)) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=OrderCondition,y=R)) + geom_violin()+ geom_quasirandom(aes(color=WordFreq)) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=WordFreq,y=R)) + geom_violin()+ geom_quasirandom(aes(color=OrderCondition)) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=OrderCondition,y=R,color=WordFreq)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=WordFreq,y=R,color=OrderCondition)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=WordFreq,y=R)) + geom_violin()+ geom_quasirandom(dodge.width=0.8) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=WordFreq,y=R)) + geom_violin()+ geom_quasirandom(aes(color=OrderCondition)) + geom_boxplot(alpha=0)
ggplot(data=results_ByFreq,aes(x=OrderCondition,y=R)) + geom_violin()+ geom_quasirandom(aes(color=WordFreq)) + geom_boxplot(alpha=0)
filter(results_ByFreq,WordFreq=="LoFreq")
lo=-filter(results_ByFreq,WordFreq=="LoFreq")
lo=filter(results_ByFreq,WordFreq=="LoFreq")
hi=filter(results_ByFreq,WordFreq=="HiFreq")
m = lme4::glmer(R ~  OrderCondition  + (1|ParticipantIdentifier),  data = filter(results_ByFreq,WordFreq=="LoFreq"), family = Gamma(link=log))
m = lme4::glmer(R ~  OrderCondition  + (1|ParticipantIdentifier),  data = filter(results_ByFreq,WordFreq=="HiFreq"), family = Gamma(link=log))
m = lme4::glmer(R ~  OrderCondition  + (1|ParticipantIdentifier),  data = filter(results_ByFreq,WordFreq=="HiFreq"), family = Gamma(link=log),control=glmerControl(optimizer = "optimx", calc.derivs = FALSE,                            optCtrl=list(method="bobyqa")))
summary(m)
m = lme4::glmer(R ~  OrderCondition  + (1|ParticipantIdentifier),  data = filter(results_ByFreq,WordFreq=="LoFreq"), family = Gamma(link=log))
m = lme4::glmer(R ~  OrderCondition  + (1|ParticipantIdentifier),  data = filter(results_ByFreq,WordFreq=="LoFreq"), family = Gamma(link=log),control=glmerControl(optimizer = "optimx", calc.derivs = FALSE,                            optCtrl=list(method="bobyqa")))
summary(m)
m = lme4::glmer(R ~  OrderCondition  + (1|ParticipantIdentifier),  data = results_AllFreq, family = Gamma(link=log),control=glmerControl(optimizer = "optimx", calc.derivs = FALSE,                            optCtrl=list(method="bobyqa")))
summary(m)
m = lme4::glmer(R ~  OrderCondition+WordFreq  + (1|ParticipantIdentifier),  data = results_ByFreq, family = Gamma(link=log),control=glmerControl(optimizer = "optimx", calc.derivs = FALSE,                            optCtrl=list(method="bobyqa")))
summary(m)
m = glm(AUROCnorm ~ OrderCondition, data = results_AllFreq, family = Gamma(link=log))
print(summary(m))
m = glm(AUROCnorm ~ OrderCondition + WordFreq, data = results_AllFreq, family = Gamma(link=log))
print(summary(m))
m = glm(AUROCnorm ~ OrderCondition + WordFreq, data = results_ByFreq, family = Gamma(link=log))
print(summary(m))
m = glm(Recollection ~ OrderCondition + WordFreq, data = results_ByFreq, family = Gamma(link=log))
print(summary(m))
m = glm(Recollection ~ OrderCondition + WordFreq, data = results_ByFreq, family = Gamma(link=log))
m = glm(R ~ OrderCondition + WordFreq, data = results_ByFreq, family = Gamma(link=log))
m = glm(R ~ OrderCondition + WordFreq, data = results_ByFreq, family = Gamma(link=log))
print(summary(m))
m = glm(R ~ OrderCondition + WordFreq, data = results_ByFreq, family = Gamma(link=log))
print(summary(m))
m = lme4::glmer(R ~  OrderCondition + WordFreq   + (1|ParticipantIdentifier),  data = results_ByFreq, family = Gamma(link=log))
summary(m)
m = lme4::glmer(R ~  OrderCondition    + (1|ParticipantIdentifier),  data = results_ByFreq, family = Gamma(link=log))
summary(m)
m = glm(R ~  OrderCondition    ,  data = results_ByFreq, family = Gamma(link=log))
summary(m)
m = glm(R ~  OrderCondition    ,  data = results_AllFreq, family = Gamma(link=log))
summary(m)
m = glm(R ~  OrderCondition    ,  data = results_AllFreq, family = Gamma(link=log))
summary(m)
len(unique(results_AllFreq$ParticipantIdentifier))
length(unique(results_AllFreq$ParticipantIdentifier))
length(unique(results_AllFreq$OrderCondition))
length(filter(results_AllFreq,OrderCondition=="Clumped"))
length(filter(results_AllFreq,OrderCondition=="Even"))
nrow(filter(results_AllFreq,OrderCondition=="Even"))
139*2
nrow(filter(results_AllFreq,OrderCondition=="Clumped"))
145+139
m = glm(R ~  OrderCondition + WordFreq,  data = results_ByFreq, family = Gamma(link=log))
m = glm(R ~  OrderCondition + WordFreq,  data = results_ByFreq, family = Gamma(link=log))
summary(m)
q()
